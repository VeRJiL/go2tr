<?php

namespace Tests\Feature;

use Tests\TestCase;
use App\Models\Image;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Storage;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class ImageTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        $this->withHeader('Accept', 'application/json');
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /** @test */
    public function an_image_can_be_created()
    {
        $this->withoutExceptionHandling();

        $this->post($this->routeForStore(), $this->data());

        $this->assertCount(1, Image::all());
    }

    /** @test */
    public function a_title_is_required()
    {
        $response = $this->post($this->routeForStore(), array_merge(
            $this->data(),
            ['title' => '']
        ));

        //TODO: we can check the json format passed, but for simplicity
        // We are checking the existing of the entity in the database
        $this->assertCount(0, Image::all());
    }

    private function data()
    {
        $image = UploadedFile::fake()->image('avatar.jpeg');

        return [
            'title' => 'fake title',
            'alt' => 'fake alt',
            'image' => $image
        ];
    }

    private function routeForStore()
    {
        return route('admin.image.store');
    }

    private function routeForUpdate()
    {
        return route('admin.image.update');
    }

    private function routeForDestroy()
    {
        return route('admin.image.destroy');
    }

    /**
     * Delete the image directory after test object will destroyed
     */
    public function __destruction()
    {
        Storage::disk('local')->deleteDirectory('public/images');
    }
}
